#! /usr/bin/env python3

import rclpy
from rclpy.node import Node
from spes_msgs.msg import MoveCommand


class Test(Node):
    def __init__(self):
        super().__init__('test')

        self._publisher = self.create_publisher(
            MoveCommand, '/move/command', 1)
        self.timer = self.create_timer(0.5, self.move_robot)
        self.counter = 5

    def move_robot(self):
        if self.counter < 0:
            self.counter = -1

        move_command = MoveCommand()
        move_command.angular_properties.max_acceleration = 0.4
        move_command.angular_properties.max_velocity = 0.2
        move_command.linear_properties.max_acceleration = 0.25
        move_command.linear_properties.max_velocity = 0.07

        move_command.target.x = self.counter * 0.1
        move_command.rotate_towards_goal = False
        move_command.translate = True
        move_command.rotate_at_goal = False
        move_command.header.frame_id = 'base_link'
        # move_command.header.stamp = (self.get_clock().now() - rclpy.duration.Duration(seconds=0.05)).to_msg()

        self._publisher.publish(move_command)
        self.get_logger().info(f'Move forward {move_command.target.x}')

        self.counter -= 1


def main(args=None):
    rclpy.init(args=args)
    test = Test()
    rclpy.spin(test)
    test.destroy_node()
    rclpy.shutdown()


if __name__ == '__main__':
    main()
