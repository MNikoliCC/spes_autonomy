#! /usr/bin/env python3
import rclpy
from rclpy.node import Node
import socket
import struct
import threading

from datetime import datetime, timedelta
from rclpy.time import Time
from builtin_interfaces.msg import Time as RosTime
from enum import Enum

from spes_msgs.msg import MoveCommand


class Test(Node):
    def __init__(self):
        super().__init__('test')

        self._publisher = self.create_publisher(MoveCommand, '/move/command', 1)
        self.timer = self.create_timer(0.1, self.move_robot)

    
    
    

    
    def move_robot(self):

        P_LINEAR = 0.048 / 480 * 5
        P_ANGULAR = 0.128 / 640 * 5
        

        #set angular and linear velocity
        move_command = MoveCommand()
        move_command.angular_properties.max_acceleration = 0.4
        move_command.angular_properties.max_velocity = 0.2
        move_command.linear_properties.max_acceleration = 0.25
        move_command.linear_properties.max_velocity = 0.07

        
        move_command.target.x = 0.05
        move_command.rotate_towards_goal = False
        move_command.translate = True
        move_command.rotate_at_goal = False
        move_command.header.frame_id = 'base_link'
       
        self._publisher.publish(move_command)
        self.get_logger().info(f"=======1========")



        

def main(args=None):
    rclpy.init(args=args)
    test = Test()
    rclpy.spin(test)
    test.destroy_node()
    rclpy.shutdown()

if __name__ == '__main__':
    main()
